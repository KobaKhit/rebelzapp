events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=3r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Log suspicious requests to a separate file
    log_format security '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'SUSPICIOUS';

    server {
        listen 80;
        server_name localhost;
        
        # Enhanced security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
        limit_conn addr 10;

        # ===== SECURITY: Block malicious requests =====
        
        # Block access to all hidden files (including .env, .git, etc.)
        location ~ /\. {
            access_log /var/log/nginx/security.log security;
            deny all;
            return 444; # Close connection without response
        }
        
        # Honeypot for .env requests - log and return fake data
        location = /.env {
            access_log /var/log/nginx/security.log security;
            default_type text/plain;
            return 200 "# Fake .env file - Your IP has been logged\nDB_HOST=honeypot.local\nDB_USER=nice_try\nDB_PASS=you_have_been_logged\n";
        }
        
        # Block common exploit attempts
        location ~* (\.php|\.asp|\.aspx|\.jsp|\.cgi)$ {
            access_log /var/log/nginx/security.log security;
            deny all;
            return 444;
        }
        
        # Block SQL injection attempts in URLs
        if ($query_string ~* "union.*select|insert.*into|delete.*from|drop.*table") {
            access_log /var/log/nginx/security.log security;
            return 444;
        }
        
        # Block XSS attempts in URLs
        if ($query_string ~* "<script|javascript:|onerror=|onload=") {
            access_log /var/log/nginx/security.log security;
            return 444;
        }
        
        # Block directory traversal attempts
        if ($query_string ~* "\.\./|\.\.\\") {
            access_log /var/log/nginx/security.log security;
            return 444;
        }
        
        # Block requests for common admin panels
        location ~* ^/(admin|phpmyadmin|pma|mysql|wp-admin|wp-login|administrator) {
            access_log /var/log/nginx/security.log security;
            deny all;
            return 444;
        }
        
        # Block requests for backup files
        location ~* \.(bak|backup|old|orig|save|swp|~)$ {
            access_log /var/log/nginx/security.log security;
            deny all;
            return 444;
        }
        
        # Block requests for config files
        location ~* (config|configuration|settings)\.(php|xml|json|yml|yaml|ini)$ {
            access_log /var/log/nginx/security.log security;
            deny all;
            return 444;
        }
        
        # ===== END SECURITY BLOCKS =====

        # Serve static files
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # API proxy to backend with rate limiting
        location /auth {
            limit_req zone=auth burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /users {
            limit_req zone=api burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /events {
            limit_req zone=api burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /ai {
            limit_req zone=api burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /roles {
            limit_req zone=api burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /permissions {
            limit_req zone=api burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /registrations {
            limit_req zone=api burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle docs endpoint
        location /docs {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /openapi.json {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
